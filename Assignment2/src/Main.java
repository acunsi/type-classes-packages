/*---------------------------
DO NOT EDIT THIS FILE!!
DO NOT EDIT THIS FILE!!
This file must not be changed!
Even adding a new line or a stray space will cause grading to fail!!!
In order to receive credit for this assignment this file must have
 -----------------------------*/
import CoolMath.DoubleArithmetic;
import CoolMath.IntegerArithmetic;

import java.util.Random;


public class Main {
    interface IntegerFunctionPointer {
        int testMethod();
    }

    interface DoubleFunctionPointer {
        double testMethod();
    }
    private static void testDoubleClass(DoubleArithmetic DA) {
        String[] operationLabel = {
                "sum",
                "difference",
                "product",
                "division quotient"
        };
        DoubleFunctionPointer[] functionPointerArray = new DoubleFunctionPointer[4];
        functionPointerArray[0] = DA::add;
        functionPointerArray[1] = DA::subtraction;
        functionPointerArray[2] = DA::multiplication;
        functionPointerArray[3] = DA::division;

        for (int i = 0; i < functionPointerArray.length; i++) {
            DoubleFunctionPointer func = functionPointerArray[i];
            double a = DA.getValueOfNum1();
            double b = DA.getValueOfNum2();
            double result = func.testMethod();
            String outputString = String.format("\t\t\tThe %s of %4.3f and %4.3f is %4.3f",
                    operationLabel[i], a, b, result);
            System.out.println(outputString);
        }
    }
    private static void testIntegerClass(IntegerArithmetic IA) {
        String[] operationLabel = {
                "sum",
                "difference",
                "product",
                "division quotient"
        };
        IntegerFunctionPointer[] functionPointerArray = new IntegerFunctionPointer[4];
        functionPointerArray[0] = IA::add;
        functionPointerArray[1] = IA::subtraction;
        functionPointerArray[2] = IA::multiplication;
        functionPointerArray[3] = IA::division;

        for (int i = 0; i < functionPointerArray.length; i++) {
            IntegerFunctionPointer func = functionPointerArray[i];
            int a = IA.getValueOfNum1();
            int b = IA.getValueOfNum2();
            int result = func.testMethod();
            String outputString = String.format("\t\t\tThe %s of %d and %d is %d",
                    operationLabel[i], a, b, result);
            System.out.println(outputString);
        }
    }

    public static void main(String[] args) {
        int argument;
        try {
            argument = Integer.parseInt(args[0]);
        } catch (Exception e) {
            argument = 150;
        }
        Random random = new Random(argument);
        SillyFunctions.testCoolMathFunction(random.nextInt(100),random.nextInt(100));
        int[] testArray = new int[random.nextInt(10)+2];
        for (int i=0; i<testArray.length; i++) {
            testArray[i] = random.nextInt(100);
        }
        System.out.println("**" + SillyFunctions.commaSeparatedArray(testArray) + "**");
        SillyFunctions.addValueToArrayElements(testArray,14);
        System.out.println("**" + SillyFunctions.commaSeparatedArray(testArray) + "**");
        int num2 = random.nextInt(100);
        int num1 = num2 + random.nextInt(1000);
        System.out.println("****Starting IntegerArithmetic Test******");
        IntegerArithmetic IA = new IntegerArithmetic(num1, num2);
        testIntegerClass(IA);
        int num1Increment = random.nextInt(200) + 2;
        int num2Increment = random.nextInt(200) + 2;
        String outputString1 = String.format("\t\tThe values of num1 and num2 will be increased by  %d and %d respectively to %d and %d",
                num1Increment,num2Increment,num1+num1Increment, num2+num2Increment);
        System.out.println(outputString1);
        IA.increaseValues(num1Increment,num2Increment);
        System.out.println("****Starting IntegerArithmetic Test******");
        testIntegerClass(IA);
        double num4 = (random.nextDouble() + 0.1)*500;
        double num3 = num4 + ((random.nextDouble() + 0.1)*500);
        System.out.println("****Starting DoubleArithmetic Test******");
        DoubleArithmetic DA = new DoubleArithmetic(num3, num4);
        testDoubleClass(DA);
        double num4Increment = (random.nextDouble() + 0.1)*100;
        double num3Increment = (random.nextDouble() + 0.1)*100;
        String outputString2 = String.format("\t\tThe values of num1 and num2 will be increased by  %4.3f and %4.3f respectively to %4.3f and %4.3f",
                num3Increment,num4Increment,num3+num3Increment, num4+num4Increment);
        System.out.println(outputString2);
        DA.increaseValues(num3Increment,num4Increment);
        System.out.println("****Starting DoubleArithmetic Test******");
        testDoubleClass(DA);
        try {
            SillyFunctions.class.getMethod("addTheTwoValues", int.class, int.class);
            SillyFunctions.class.getDeclaredMethod("addTheTwoValues", int.class, int.class);
            System.out.println("I should Not be able to reach method SillyFunctions.addTheTwoValues");
        } catch (Exception e) {
            System.out.println("I can not reach method SillyFunctions.addTheTwoValues - (GOOD JOB)");
        }

    }
}